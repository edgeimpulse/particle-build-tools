/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PARTICLE_CTRL_CELLULAR_CONTROL_CELLULAR_PB_H_INCLUDED
#define PB_PARTICLE_CTRL_CELLULAR_CONTROL_CELLULAR_PB_H_INCLUDED
#include <pb.h>
#include "control/extensions.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* *
 SIM card types.

 The Boron 2G/3G and Boron LTE can use either the built-in MFF2 embedded Particle SIM card or an external nano SIM card in the SIM card connector.

 Note: The values of this enum should match the values defined by the `SimType` enum in the firmware. */
typedef enum _particle_ctrl_cellular_SimType { 
    particle_ctrl_cellular_SimType_INVALID_SIM_TYPE = 0, /* Invalid */
    particle_ctrl_cellular_SimType_INTERNAL = 1, /* Built-in MFF2 embedded Particle SIM */
    particle_ctrl_cellular_SimType_EXTERNAL = 2 /* External nano SIM card */
} particle_ctrl_cellular_SimType;

/* Struct definitions */
/* *
 Get active SIM card. */
typedef struct _particle_ctrl_cellular_GetActiveSimRequest { 
    char dummy_field;
} particle_ctrl_cellular_GetActiveSimRequest;

typedef struct _particle_ctrl_cellular_GetIccidReply { 
    pb_callback_t iccid; /* SIM ICCID */
} particle_ctrl_cellular_GetIccidReply;

/* *
 Get ICCID. */
typedef struct _particle_ctrl_cellular_GetIccidRequest { 
    char dummy_field;
} particle_ctrl_cellular_GetIccidRequest;

typedef struct _particle_ctrl_cellular_SetAccessPointReply { 
    char dummy_field;
} particle_ctrl_cellular_SetAccessPointReply;

typedef struct _particle_ctrl_cellular_SetActiveSimReply { 
    char dummy_field;
} particle_ctrl_cellular_SetActiveSimReply;

/* *
 Access point settings for 3rd party SIM credentials for the Cellular network. */
typedef struct _particle_ctrl_cellular_AccessPoint { 
    pb_callback_t apn; /* APN */
    pb_callback_t user; /* Username */
    pb_callback_t password; /* Password */
    bool use_defaults; /* If `true`, it will restore the defaules */
} particle_ctrl_cellular_AccessPoint;

/* *
 Get access point settings. */
typedef struct _particle_ctrl_cellular_GetAccessPointRequest { 
    particle_ctrl_cellular_SimType sim_type; 
} particle_ctrl_cellular_GetAccessPointRequest;

typedef struct _particle_ctrl_cellular_GetActiveSimReply { 
    particle_ctrl_cellular_SimType sim_type; 
} particle_ctrl_cellular_GetActiveSimReply;

/* *
 Set active SIM card.

 Note: The device needs to be reset in order for the settings to take effect. */
typedef struct _particle_ctrl_cellular_SetActiveSimRequest { 
    particle_ctrl_cellular_SimType sim_type; 
} particle_ctrl_cellular_SetActiveSimRequest;

typedef struct _particle_ctrl_cellular_GetAccessPointReply { 
    particle_ctrl_cellular_AccessPoint access_point; 
} particle_ctrl_cellular_GetAccessPointReply;

/* *
 Set access point settings. */
typedef struct _particle_ctrl_cellular_SetAccessPointRequest { 
    particle_ctrl_cellular_SimType sim_type; 
    particle_ctrl_cellular_AccessPoint access_point; 
} particle_ctrl_cellular_SetAccessPointRequest;


/* Helper constants for enums */
#define _particle_ctrl_cellular_SimType_MIN particle_ctrl_cellular_SimType_INVALID_SIM_TYPE
#define _particle_ctrl_cellular_SimType_MAX particle_ctrl_cellular_SimType_EXTERNAL
#define _particle_ctrl_cellular_SimType_ARRAYSIZE ((particle_ctrl_cellular_SimType)(particle_ctrl_cellular_SimType_EXTERNAL+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define particle_ctrl_cellular_AccessPoint_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define particle_ctrl_cellular_SetAccessPointRequest_init_default {_particle_ctrl_cellular_SimType_MIN, particle_ctrl_cellular_AccessPoint_init_default}
#define particle_ctrl_cellular_SetAccessPointReply_init_default {0}
#define particle_ctrl_cellular_GetAccessPointRequest_init_default {_particle_ctrl_cellular_SimType_MIN}
#define particle_ctrl_cellular_GetAccessPointReply_init_default {particle_ctrl_cellular_AccessPoint_init_default}
#define particle_ctrl_cellular_SetActiveSimRequest_init_default {_particle_ctrl_cellular_SimType_MIN}
#define particle_ctrl_cellular_SetActiveSimReply_init_default {0}
#define particle_ctrl_cellular_GetActiveSimRequest_init_default {0}
#define particle_ctrl_cellular_GetActiveSimReply_init_default {_particle_ctrl_cellular_SimType_MIN}
#define particle_ctrl_cellular_GetIccidRequest_init_default {0}
#define particle_ctrl_cellular_GetIccidReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_cellular_AccessPoint_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define particle_ctrl_cellular_SetAccessPointRequest_init_zero {_particle_ctrl_cellular_SimType_MIN, particle_ctrl_cellular_AccessPoint_init_zero}
#define particle_ctrl_cellular_SetAccessPointReply_init_zero {0}
#define particle_ctrl_cellular_GetAccessPointRequest_init_zero {_particle_ctrl_cellular_SimType_MIN}
#define particle_ctrl_cellular_GetAccessPointReply_init_zero {particle_ctrl_cellular_AccessPoint_init_zero}
#define particle_ctrl_cellular_SetActiveSimRequest_init_zero {_particle_ctrl_cellular_SimType_MIN}
#define particle_ctrl_cellular_SetActiveSimReply_init_zero {0}
#define particle_ctrl_cellular_GetActiveSimRequest_init_zero {0}
#define particle_ctrl_cellular_GetActiveSimReply_init_zero {_particle_ctrl_cellular_SimType_MIN}
#define particle_ctrl_cellular_GetIccidRequest_init_zero {0}
#define particle_ctrl_cellular_GetIccidReply_init_zero {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define particle_ctrl_cellular_GetIccidReply_iccid_tag 1
#define particle_ctrl_cellular_AccessPoint_apn_tag 1
#define particle_ctrl_cellular_AccessPoint_user_tag 2
#define particle_ctrl_cellular_AccessPoint_password_tag 3
#define particle_ctrl_cellular_AccessPoint_use_defaults_tag 4
#define particle_ctrl_cellular_GetAccessPointRequest_sim_type_tag 1
#define particle_ctrl_cellular_GetActiveSimReply_sim_type_tag 1
#define particle_ctrl_cellular_SetActiveSimRequest_sim_type_tag 1
#define particle_ctrl_cellular_GetAccessPointReply_access_point_tag 1
#define particle_ctrl_cellular_SetAccessPointRequest_sim_type_tag 1
#define particle_ctrl_cellular_SetAccessPointRequest_access_point_tag 2

/* Struct field encoding specification for nanopb */
#define particle_ctrl_cellular_AccessPoint_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   apn,               1) \
X(a, CALLBACK, SINGULAR, STRING,   user,              2) \
X(a, CALLBACK, SINGULAR, STRING,   password,          3) \
X(a, STATIC,   SINGULAR, BOOL,     use_defaults,      4)
#define particle_ctrl_cellular_AccessPoint_CALLBACK pb_default_field_callback
#define particle_ctrl_cellular_AccessPoint_DEFAULT NULL

#define particle_ctrl_cellular_SetAccessPointRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    sim_type,          1) \
X(a, STATIC,   SINGULAR, MESSAGE,  access_point,      2)
#define particle_ctrl_cellular_SetAccessPointRequest_CALLBACK NULL
#define particle_ctrl_cellular_SetAccessPointRequest_DEFAULT NULL
#define particle_ctrl_cellular_SetAccessPointRequest_access_point_MSGTYPE particle_ctrl_cellular_AccessPoint

#define particle_ctrl_cellular_SetAccessPointReply_FIELDLIST(X, a) \

#define particle_ctrl_cellular_SetAccessPointReply_CALLBACK NULL
#define particle_ctrl_cellular_SetAccessPointReply_DEFAULT NULL

#define particle_ctrl_cellular_GetAccessPointRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    sim_type,          1)
#define particle_ctrl_cellular_GetAccessPointRequest_CALLBACK NULL
#define particle_ctrl_cellular_GetAccessPointRequest_DEFAULT NULL

#define particle_ctrl_cellular_GetAccessPointReply_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, MESSAGE,  access_point,      1)
#define particle_ctrl_cellular_GetAccessPointReply_CALLBACK NULL
#define particle_ctrl_cellular_GetAccessPointReply_DEFAULT NULL
#define particle_ctrl_cellular_GetAccessPointReply_access_point_MSGTYPE particle_ctrl_cellular_AccessPoint

#define particle_ctrl_cellular_SetActiveSimRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    sim_type,          1)
#define particle_ctrl_cellular_SetActiveSimRequest_CALLBACK NULL
#define particle_ctrl_cellular_SetActiveSimRequest_DEFAULT NULL

#define particle_ctrl_cellular_SetActiveSimReply_FIELDLIST(X, a) \

#define particle_ctrl_cellular_SetActiveSimReply_CALLBACK NULL
#define particle_ctrl_cellular_SetActiveSimReply_DEFAULT NULL

#define particle_ctrl_cellular_GetActiveSimRequest_FIELDLIST(X, a) \

#define particle_ctrl_cellular_GetActiveSimRequest_CALLBACK NULL
#define particle_ctrl_cellular_GetActiveSimRequest_DEFAULT NULL

#define particle_ctrl_cellular_GetActiveSimReply_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    sim_type,          1)
#define particle_ctrl_cellular_GetActiveSimReply_CALLBACK NULL
#define particle_ctrl_cellular_GetActiveSimReply_DEFAULT NULL

#define particle_ctrl_cellular_GetIccidRequest_FIELDLIST(X, a) \

#define particle_ctrl_cellular_GetIccidRequest_CALLBACK NULL
#define particle_ctrl_cellular_GetIccidRequest_DEFAULT NULL

#define particle_ctrl_cellular_GetIccidReply_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   iccid,             1)
#define particle_ctrl_cellular_GetIccidReply_CALLBACK pb_default_field_callback
#define particle_ctrl_cellular_GetIccidReply_DEFAULT NULL

extern const pb_msgdesc_t particle_ctrl_cellular_AccessPoint_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_SetAccessPointRequest_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_SetAccessPointReply_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_GetAccessPointRequest_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_GetAccessPointReply_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_SetActiveSimRequest_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_SetActiveSimReply_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_GetActiveSimRequest_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_GetActiveSimReply_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_GetIccidRequest_msg;
extern const pb_msgdesc_t particle_ctrl_cellular_GetIccidReply_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define particle_ctrl_cellular_AccessPoint_fields &particle_ctrl_cellular_AccessPoint_msg
#define particle_ctrl_cellular_SetAccessPointRequest_fields &particle_ctrl_cellular_SetAccessPointRequest_msg
#define particle_ctrl_cellular_SetAccessPointReply_fields &particle_ctrl_cellular_SetAccessPointReply_msg
#define particle_ctrl_cellular_GetAccessPointRequest_fields &particle_ctrl_cellular_GetAccessPointRequest_msg
#define particle_ctrl_cellular_GetAccessPointReply_fields &particle_ctrl_cellular_GetAccessPointReply_msg
#define particle_ctrl_cellular_SetActiveSimRequest_fields &particle_ctrl_cellular_SetActiveSimRequest_msg
#define particle_ctrl_cellular_SetActiveSimReply_fields &particle_ctrl_cellular_SetActiveSimReply_msg
#define particle_ctrl_cellular_GetActiveSimRequest_fields &particle_ctrl_cellular_GetActiveSimRequest_msg
#define particle_ctrl_cellular_GetActiveSimReply_fields &particle_ctrl_cellular_GetActiveSimReply_msg
#define particle_ctrl_cellular_GetIccidRequest_fields &particle_ctrl_cellular_GetIccidRequest_msg
#define particle_ctrl_cellular_GetIccidReply_fields &particle_ctrl_cellular_GetIccidReply_msg

/* Maximum encoded size of messages (where known) */
/* particle_ctrl_cellular_AccessPoint_size depends on runtime parameters */
/* particle_ctrl_cellular_SetAccessPointRequest_size depends on runtime parameters */
/* particle_ctrl_cellular_GetAccessPointReply_size depends on runtime parameters */
/* particle_ctrl_cellular_GetIccidReply_size depends on runtime parameters */
#define particle_ctrl_cellular_GetAccessPointRequest_size 2
#define particle_ctrl_cellular_GetActiveSimReply_size 2
#define particle_ctrl_cellular_GetActiveSimRequest_size 0
#define particle_ctrl_cellular_GetIccidRequest_size 0
#define particle_ctrl_cellular_SetAccessPointReply_size 0
#define particle_ctrl_cellular_SetActiveSimReply_size 0
#define particle_ctrl_cellular_SetActiveSimRequest_size 2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif

/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PARTICLE_CTRL_WIFI_CONTROL_WIFI_NEW_PB_H_INCLUDED
#define PB_PARTICLE_CTRL_WIFI_CONTROL_WIFI_NEW_PB_H_INCLUDED
#include <pb.h>
#include "control/extensions.pb.h"
#include "control/network.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* *
 WiFi security types.

 Note: The values of this enum should match the values defined by the `WifiSecurity` enum in
 the firmware. */
typedef enum _particle_ctrl_wifi_Security { 
    particle_ctrl_wifi_Security_NO_SECURITY = 0, /* No security */
    particle_ctrl_wifi_Security_WEP = 1, /* WEP */
    particle_ctrl_wifi_Security_WPA_PSK = 2, /* WPA PSK */
    particle_ctrl_wifi_Security_WPA2_PSK = 3, /* WPA2 PSK */
    particle_ctrl_wifi_Security_WPA_WPA2_PSK = 4, /* WPA/WPA2 PSK */
    particle_ctrl_wifi_Security_WPA3_PSK = 5, /* WPA3 PSK */
    particle_ctrl_wifi_Security_WPA2_WPA3_PSK = 6 /* WPA2/WPA3 PSK */
} particle_ctrl_wifi_Security;

/* *
 Network credential types.

 Note: The values of this enum should match the values defined by the `WiFiCredentials::Type` enum
 in the firmware. */
typedef enum _particle_ctrl_wifi_CredentialsType { 
    particle_ctrl_wifi_CredentialsType_NO_CREDENTIALS = 0, /* No WiFi credentials */
    particle_ctrl_wifi_CredentialsType_PASSWORD = 1 /* WiFi password */
} particle_ctrl_wifi_CredentialsType;

/* Struct definitions */
/* *
 Get the current network.

 This request gets the network which the device is currently connected to. */
typedef struct _particle_ctrl_wifi_ClearKnownNetworksReply { 
    char dummy_field;
} particle_ctrl_wifi_ClearKnownNetworksReply;

typedef struct _particle_ctrl_wifi_ClearKnownNetworksRequest { 
    char dummy_field;
} particle_ctrl_wifi_ClearKnownNetworksRequest;

typedef struct _particle_ctrl_wifi_GetCurrentNetworkRequest { 
    char dummy_field;
} particle_ctrl_wifi_GetCurrentNetworkRequest;

typedef struct _particle_ctrl_wifi_GetKnownNetworksReply { 
    pb_callback_t networks; /* All known networks */
} particle_ctrl_wifi_GetKnownNetworksReply;

/* *
 Get the list of known networks. */
typedef struct _particle_ctrl_wifi_GetKnownNetworksRequest { 
    char dummy_field;
} particle_ctrl_wifi_GetKnownNetworksRequest;

typedef struct _particle_ctrl_wifi_JoinKnownNetworkReply { 
    char dummy_field;
} particle_ctrl_wifi_JoinKnownNetworkReply;

/* *
 Join a known network. */
typedef struct _particle_ctrl_wifi_JoinKnownNetworkRequest { 
    pb_callback_t ssid; /* Network SSID */
} particle_ctrl_wifi_JoinKnownNetworkRequest;

typedef struct _particle_ctrl_wifi_JoinNewNetworkReply { 
    char dummy_field;
} particle_ctrl_wifi_JoinNewNetworkReply;

/* *
 Remove all known networks. */
typedef struct _particle_ctrl_wifi_RemoveKnownNetworkReply { 
    char dummy_field;
} particle_ctrl_wifi_RemoveKnownNetworkReply;

typedef struct _particle_ctrl_wifi_RemoveKnownNetworkRequest { 
    pb_callback_t ssid; 
} particle_ctrl_wifi_RemoveKnownNetworkRequest;

typedef struct _particle_ctrl_wifi_ScanNetworksReply { 
    pb_callback_t networks; 
} particle_ctrl_wifi_ScanNetworksReply;

typedef struct _particle_ctrl_wifi_ScanNetworksRequest { 
    char dummy_field;
} particle_ctrl_wifi_ScanNetworksRequest;

/* *
 Network credentials. */
typedef struct _particle_ctrl_wifi_Credentials { 
    particle_ctrl_wifi_CredentialsType type; 
    pb_callback_t password; 
} particle_ctrl_wifi_Credentials;

typedef PB_BYTES_ARRAY_T(6) particle_ctrl_wifi_GetCurrentNetworkReply_bssid_t;
/* *
 Scan for networks. */
typedef struct _particle_ctrl_wifi_GetCurrentNetworkReply { 
    pb_callback_t ssid; 
    particle_ctrl_wifi_GetCurrentNetworkReply_bssid_t bssid; 
    int32_t channel; 
    int32_t rssi; 
} particle_ctrl_wifi_GetCurrentNetworkReply;

/* *
 Remove the network from the list of known networks. */
typedef struct _particle_ctrl_wifi_GetKnownNetworksReply_Network { 
    pb_callback_t ssid; /* Network SSID */
    particle_ctrl_wifi_Security security; 
    particle_ctrl_wifi_CredentialsType credentials_type; 
} particle_ctrl_wifi_GetKnownNetworksReply_Network;

typedef PB_BYTES_ARRAY_T(6) particle_ctrl_wifi_ScanNetworksReply_Network_bssid_t;
typedef struct _particle_ctrl_wifi_ScanNetworksReply_Network { 
    pb_callback_t ssid; 
    particle_ctrl_wifi_ScanNetworksReply_Network_bssid_t bssid; 
    particle_ctrl_wifi_Security security; 
    int32_t channel; 
    int32_t rssi; 
} particle_ctrl_wifi_ScanNetworksReply_Network;

typedef PB_BYTES_ARRAY_T(6) particle_ctrl_wifi_JoinNewNetworkRequest_bssid_t;
/* *
 Join a new network.

 On success, the network credentials get saved to a persistent storage. */
typedef struct _particle_ctrl_wifi_JoinNewNetworkRequest { 
    pb_callback_t ssid; /* Network SSID */
    particle_ctrl_wifi_JoinNewNetworkRequest_bssid_t bssid; /* Network address */
    particle_ctrl_wifi_Security security; /* Network security */
    particle_ctrl_wifi_Credentials credentials; /* Network credentials */
    particle_ctrl_Interface interface_config; /* Network interface configuration (IP, mask, DNS etc) */
    bool hidden; 
} particle_ctrl_wifi_JoinNewNetworkRequest;


/* Helper constants for enums */
#define _particle_ctrl_wifi_Security_MIN particle_ctrl_wifi_Security_NO_SECURITY
#define _particle_ctrl_wifi_Security_MAX particle_ctrl_wifi_Security_WPA2_WPA3_PSK
#define _particle_ctrl_wifi_Security_ARRAYSIZE ((particle_ctrl_wifi_Security)(particle_ctrl_wifi_Security_WPA2_WPA3_PSK+1))

#define _particle_ctrl_wifi_CredentialsType_MIN particle_ctrl_wifi_CredentialsType_NO_CREDENTIALS
#define _particle_ctrl_wifi_CredentialsType_MAX particle_ctrl_wifi_CredentialsType_PASSWORD
#define _particle_ctrl_wifi_CredentialsType_ARRAYSIZE ((particle_ctrl_wifi_CredentialsType)(particle_ctrl_wifi_CredentialsType_PASSWORD+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define particle_ctrl_wifi_Credentials_init_default {_particle_ctrl_wifi_CredentialsType_MIN, {{NULL}, NULL}}
#define particle_ctrl_wifi_JoinNewNetworkRequest_init_default {{{NULL}, NULL}, {0, {0}}, _particle_ctrl_wifi_Security_MIN, particle_ctrl_wifi_Credentials_init_default, particle_ctrl_Interface_init_default, 0}
#define particle_ctrl_wifi_JoinNewNetworkReply_init_default {0}
#define particle_ctrl_wifi_JoinKnownNetworkRequest_init_default {{{NULL}, NULL}}
#define particle_ctrl_wifi_JoinKnownNetworkReply_init_default {0}
#define particle_ctrl_wifi_GetKnownNetworksRequest_init_default {0}
#define particle_ctrl_wifi_GetKnownNetworksReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_wifi_GetKnownNetworksReply_Network_init_default {{{NULL}, NULL}, _particle_ctrl_wifi_Security_MIN, _particle_ctrl_wifi_CredentialsType_MIN}
#define particle_ctrl_wifi_RemoveKnownNetworkRequest_init_default {{{NULL}, NULL}}
#define particle_ctrl_wifi_RemoveKnownNetworkReply_init_default {0}
#define particle_ctrl_wifi_ClearKnownNetworksRequest_init_default {0}
#define particle_ctrl_wifi_ClearKnownNetworksReply_init_default {0}
#define particle_ctrl_wifi_GetCurrentNetworkRequest_init_default {0}
#define particle_ctrl_wifi_GetCurrentNetworkReply_init_default {{{NULL}, NULL}, {0, {0}}, 0, 0}
#define particle_ctrl_wifi_ScanNetworksRequest_init_default {0}
#define particle_ctrl_wifi_ScanNetworksReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_wifi_ScanNetworksReply_Network_init_default {{{NULL}, NULL}, {0, {0}}, _particle_ctrl_wifi_Security_MIN, 0, 0}
#define particle_ctrl_wifi_Credentials_init_zero {_particle_ctrl_wifi_CredentialsType_MIN, {{NULL}, NULL}}
#define particle_ctrl_wifi_JoinNewNetworkRequest_init_zero {{{NULL}, NULL}, {0, {0}}, _particle_ctrl_wifi_Security_MIN, particle_ctrl_wifi_Credentials_init_zero, particle_ctrl_Interface_init_zero, 0}
#define particle_ctrl_wifi_JoinNewNetworkReply_init_zero {0}
#define particle_ctrl_wifi_JoinKnownNetworkRequest_init_zero {{{NULL}, NULL}}
#define particle_ctrl_wifi_JoinKnownNetworkReply_init_zero {0}
#define particle_ctrl_wifi_GetKnownNetworksRequest_init_zero {0}
#define particle_ctrl_wifi_GetKnownNetworksReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_wifi_GetKnownNetworksReply_Network_init_zero {{{NULL}, NULL}, _particle_ctrl_wifi_Security_MIN, _particle_ctrl_wifi_CredentialsType_MIN}
#define particle_ctrl_wifi_RemoveKnownNetworkRequest_init_zero {{{NULL}, NULL}}
#define particle_ctrl_wifi_RemoveKnownNetworkReply_init_zero {0}
#define particle_ctrl_wifi_ClearKnownNetworksRequest_init_zero {0}
#define particle_ctrl_wifi_ClearKnownNetworksReply_init_zero {0}
#define particle_ctrl_wifi_GetCurrentNetworkRequest_init_zero {0}
#define particle_ctrl_wifi_GetCurrentNetworkReply_init_zero {{{NULL}, NULL}, {0, {0}}, 0, 0}
#define particle_ctrl_wifi_ScanNetworksRequest_init_zero {0}
#define particle_ctrl_wifi_ScanNetworksReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_wifi_ScanNetworksReply_Network_init_zero {{{NULL}, NULL}, {0, {0}}, _particle_ctrl_wifi_Security_MIN, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define particle_ctrl_wifi_GetKnownNetworksReply_networks_tag 1
#define particle_ctrl_wifi_JoinKnownNetworkRequest_ssid_tag 1
#define particle_ctrl_wifi_RemoveKnownNetworkRequest_ssid_tag 1
#define particle_ctrl_wifi_ScanNetworksReply_networks_tag 1
#define particle_ctrl_wifi_Credentials_type_tag  1
#define particle_ctrl_wifi_Credentials_password_tag 2
#define particle_ctrl_wifi_GetCurrentNetworkReply_ssid_tag 1
#define particle_ctrl_wifi_GetCurrentNetworkReply_bssid_tag 2
#define particle_ctrl_wifi_GetCurrentNetworkReply_channel_tag 3
#define particle_ctrl_wifi_GetCurrentNetworkReply_rssi_tag 4
#define particle_ctrl_wifi_GetKnownNetworksReply_Network_ssid_tag 1
#define particle_ctrl_wifi_GetKnownNetworksReply_Network_security_tag 2
#define particle_ctrl_wifi_GetKnownNetworksReply_Network_credentials_type_tag 3
#define particle_ctrl_wifi_ScanNetworksReply_Network_ssid_tag 1
#define particle_ctrl_wifi_ScanNetworksReply_Network_bssid_tag 2
#define particle_ctrl_wifi_ScanNetworksReply_Network_security_tag 3
#define particle_ctrl_wifi_ScanNetworksReply_Network_channel_tag 4
#define particle_ctrl_wifi_ScanNetworksReply_Network_rssi_tag 5
#define particle_ctrl_wifi_JoinNewNetworkRequest_ssid_tag 1
#define particle_ctrl_wifi_JoinNewNetworkRequest_bssid_tag 2
#define particle_ctrl_wifi_JoinNewNetworkRequest_security_tag 3
#define particle_ctrl_wifi_JoinNewNetworkRequest_credentials_tag 4
#define particle_ctrl_wifi_JoinNewNetworkRequest_interface_config_tag 5
#define particle_ctrl_wifi_JoinNewNetworkRequest_hidden_tag 6

/* Struct field encoding specification for nanopb */
#define particle_ctrl_wifi_Credentials_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, CALLBACK, SINGULAR, STRING,   password,          2)
#define particle_ctrl_wifi_Credentials_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_Credentials_DEFAULT NULL

#define particle_ctrl_wifi_JoinNewNetworkRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, BYTES,    bssid,             2) \
X(a, STATIC,   SINGULAR, UENUM,    security,          3) \
X(a, STATIC,   SINGULAR, MESSAGE,  credentials,       4) \
X(a, STATIC,   SINGULAR, MESSAGE,  interface_config,   5) \
X(a, STATIC,   SINGULAR, BOOL,     hidden,            6)
#define particle_ctrl_wifi_JoinNewNetworkRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_JoinNewNetworkRequest_DEFAULT NULL
#define particle_ctrl_wifi_JoinNewNetworkRequest_credentials_MSGTYPE particle_ctrl_wifi_Credentials
#define particle_ctrl_wifi_JoinNewNetworkRequest_interface_config_MSGTYPE particle_ctrl_Interface

#define particle_ctrl_wifi_JoinNewNetworkReply_FIELDLIST(X, a) \

#define particle_ctrl_wifi_JoinNewNetworkReply_CALLBACK NULL
#define particle_ctrl_wifi_JoinNewNetworkReply_DEFAULT NULL

#define particle_ctrl_wifi_JoinKnownNetworkRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ssid,              1)
#define particle_ctrl_wifi_JoinKnownNetworkRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_JoinKnownNetworkRequest_DEFAULT NULL

#define particle_ctrl_wifi_JoinKnownNetworkReply_FIELDLIST(X, a) \

#define particle_ctrl_wifi_JoinKnownNetworkReply_CALLBACK NULL
#define particle_ctrl_wifi_JoinKnownNetworkReply_DEFAULT NULL

#define particle_ctrl_wifi_GetKnownNetworksRequest_FIELDLIST(X, a) \

#define particle_ctrl_wifi_GetKnownNetworksRequest_CALLBACK NULL
#define particle_ctrl_wifi_GetKnownNetworksRequest_DEFAULT NULL

#define particle_ctrl_wifi_GetKnownNetworksReply_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  networks,          1)
#define particle_ctrl_wifi_GetKnownNetworksReply_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_GetKnownNetworksReply_DEFAULT NULL
#define particle_ctrl_wifi_GetKnownNetworksReply_networks_MSGTYPE particle_ctrl_wifi_GetKnownNetworksReply_Network

#define particle_ctrl_wifi_GetKnownNetworksReply_Network_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, UENUM,    security,          2) \
X(a, STATIC,   SINGULAR, UENUM,    credentials_type,   3)
#define particle_ctrl_wifi_GetKnownNetworksReply_Network_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_GetKnownNetworksReply_Network_DEFAULT NULL

#define particle_ctrl_wifi_RemoveKnownNetworkRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ssid,              1)
#define particle_ctrl_wifi_RemoveKnownNetworkRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_RemoveKnownNetworkRequest_DEFAULT NULL

#define particle_ctrl_wifi_RemoveKnownNetworkReply_FIELDLIST(X, a) \

#define particle_ctrl_wifi_RemoveKnownNetworkReply_CALLBACK NULL
#define particle_ctrl_wifi_RemoveKnownNetworkReply_DEFAULT NULL

#define particle_ctrl_wifi_ClearKnownNetworksRequest_FIELDLIST(X, a) \

#define particle_ctrl_wifi_ClearKnownNetworksRequest_CALLBACK NULL
#define particle_ctrl_wifi_ClearKnownNetworksRequest_DEFAULT NULL

#define particle_ctrl_wifi_ClearKnownNetworksReply_FIELDLIST(X, a) \

#define particle_ctrl_wifi_ClearKnownNetworksReply_CALLBACK NULL
#define particle_ctrl_wifi_ClearKnownNetworksReply_DEFAULT NULL

#define particle_ctrl_wifi_GetCurrentNetworkRequest_FIELDLIST(X, a) \

#define particle_ctrl_wifi_GetCurrentNetworkRequest_CALLBACK NULL
#define particle_ctrl_wifi_GetCurrentNetworkRequest_DEFAULT NULL

#define particle_ctrl_wifi_GetCurrentNetworkReply_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, BYTES,    bssid,             2) \
X(a, STATIC,   SINGULAR, INT32,    channel,           3) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              4)
#define particle_ctrl_wifi_GetCurrentNetworkReply_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_GetCurrentNetworkReply_DEFAULT NULL

#define particle_ctrl_wifi_ScanNetworksRequest_FIELDLIST(X, a) \

#define particle_ctrl_wifi_ScanNetworksRequest_CALLBACK NULL
#define particle_ctrl_wifi_ScanNetworksRequest_DEFAULT NULL

#define particle_ctrl_wifi_ScanNetworksReply_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  networks,          1)
#define particle_ctrl_wifi_ScanNetworksReply_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_ScanNetworksReply_DEFAULT NULL
#define particle_ctrl_wifi_ScanNetworksReply_networks_MSGTYPE particle_ctrl_wifi_ScanNetworksReply_Network

#define particle_ctrl_wifi_ScanNetworksReply_Network_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ssid,              1) \
X(a, STATIC,   SINGULAR, BYTES,    bssid,             2) \
X(a, STATIC,   SINGULAR, UENUM,    security,          3) \
X(a, STATIC,   SINGULAR, INT32,    channel,           4) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              5)
#define particle_ctrl_wifi_ScanNetworksReply_Network_CALLBACK pb_default_field_callback
#define particle_ctrl_wifi_ScanNetworksReply_Network_DEFAULT NULL

extern const pb_msgdesc_t particle_ctrl_wifi_Credentials_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_JoinNewNetworkRequest_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_JoinNewNetworkReply_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_JoinKnownNetworkRequest_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_JoinKnownNetworkReply_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_GetKnownNetworksRequest_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_GetKnownNetworksReply_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_GetKnownNetworksReply_Network_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_RemoveKnownNetworkRequest_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_RemoveKnownNetworkReply_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_ClearKnownNetworksRequest_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_ClearKnownNetworksReply_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_GetCurrentNetworkRequest_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_GetCurrentNetworkReply_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_ScanNetworksRequest_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_ScanNetworksReply_msg;
extern const pb_msgdesc_t particle_ctrl_wifi_ScanNetworksReply_Network_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define particle_ctrl_wifi_Credentials_fields &particle_ctrl_wifi_Credentials_msg
#define particle_ctrl_wifi_JoinNewNetworkRequest_fields &particle_ctrl_wifi_JoinNewNetworkRequest_msg
#define particle_ctrl_wifi_JoinNewNetworkReply_fields &particle_ctrl_wifi_JoinNewNetworkReply_msg
#define particle_ctrl_wifi_JoinKnownNetworkRequest_fields &particle_ctrl_wifi_JoinKnownNetworkRequest_msg
#define particle_ctrl_wifi_JoinKnownNetworkReply_fields &particle_ctrl_wifi_JoinKnownNetworkReply_msg
#define particle_ctrl_wifi_GetKnownNetworksRequest_fields &particle_ctrl_wifi_GetKnownNetworksRequest_msg
#define particle_ctrl_wifi_GetKnownNetworksReply_fields &particle_ctrl_wifi_GetKnownNetworksReply_msg
#define particle_ctrl_wifi_GetKnownNetworksReply_Network_fields &particle_ctrl_wifi_GetKnownNetworksReply_Network_msg
#define particle_ctrl_wifi_RemoveKnownNetworkRequest_fields &particle_ctrl_wifi_RemoveKnownNetworkRequest_msg
#define particle_ctrl_wifi_RemoveKnownNetworkReply_fields &particle_ctrl_wifi_RemoveKnownNetworkReply_msg
#define particle_ctrl_wifi_ClearKnownNetworksRequest_fields &particle_ctrl_wifi_ClearKnownNetworksRequest_msg
#define particle_ctrl_wifi_ClearKnownNetworksReply_fields &particle_ctrl_wifi_ClearKnownNetworksReply_msg
#define particle_ctrl_wifi_GetCurrentNetworkRequest_fields &particle_ctrl_wifi_GetCurrentNetworkRequest_msg
#define particle_ctrl_wifi_GetCurrentNetworkReply_fields &particle_ctrl_wifi_GetCurrentNetworkReply_msg
#define particle_ctrl_wifi_ScanNetworksRequest_fields &particle_ctrl_wifi_ScanNetworksRequest_msg
#define particle_ctrl_wifi_ScanNetworksReply_fields &particle_ctrl_wifi_ScanNetworksReply_msg
#define particle_ctrl_wifi_ScanNetworksReply_Network_fields &particle_ctrl_wifi_ScanNetworksReply_Network_msg

/* Maximum encoded size of messages (where known) */
/* particle_ctrl_wifi_Credentials_size depends on runtime parameters */
/* particle_ctrl_wifi_JoinNewNetworkRequest_size depends on runtime parameters */
/* particle_ctrl_wifi_JoinKnownNetworkRequest_size depends on runtime parameters */
/* particle_ctrl_wifi_GetKnownNetworksReply_size depends on runtime parameters */
/* particle_ctrl_wifi_GetKnownNetworksReply_Network_size depends on runtime parameters */
/* particle_ctrl_wifi_RemoveKnownNetworkRequest_size depends on runtime parameters */
/* particle_ctrl_wifi_GetCurrentNetworkReply_size depends on runtime parameters */
/* particle_ctrl_wifi_ScanNetworksReply_size depends on runtime parameters */
/* particle_ctrl_wifi_ScanNetworksReply_Network_size depends on runtime parameters */
#define particle_ctrl_wifi_ClearKnownNetworksReply_size 0
#define particle_ctrl_wifi_ClearKnownNetworksRequest_size 0
#define particle_ctrl_wifi_GetCurrentNetworkRequest_size 0
#define particle_ctrl_wifi_GetKnownNetworksRequest_size 0
#define particle_ctrl_wifi_JoinKnownNetworkReply_size 0
#define particle_ctrl_wifi_JoinNewNetworkReply_size 0
#define particle_ctrl_wifi_RemoveKnownNetworkReply_size 0
#define particle_ctrl_wifi_ScanNetworksRequest_size 0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif

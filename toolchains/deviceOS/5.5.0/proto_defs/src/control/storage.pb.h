/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PARTICLE_CTRL_CONTROL_STORAGE_PB_H_INCLUDED
#define PB_PARTICLE_CTRL_CONTROL_STORAGE_PB_H_INCLUDED
#include <pb.h>
#include "control/extensions.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _particle_ctrl_StorageType { 
    particle_ctrl_StorageType_INVALID_STORAGE = 0, 
    particle_ctrl_StorageType_INTERNAL = 1 /* Internal flash */
} particle_ctrl_StorageType;

typedef enum _particle_ctrl_SectionType { 
    particle_ctrl_SectionType_INVALID_SECTION = 0, 
    particle_ctrl_SectionType_FIRMWARE = 1, /* Firmware module */
    particle_ctrl_SectionType_OTA_BACKUP = 2, /* OTA backup */
    particle_ctrl_SectionType_FACTORY_BACKUP = 3, /* Factory backup */
    particle_ctrl_SectionType_CONFIG = 4, /* Device configuration */
    particle_ctrl_SectionType_EEPROM = 5 /* Emulated EEPROM */
} particle_ctrl_SectionType;

typedef enum _particle_ctrl_FirmwareModuleType { 
    particle_ctrl_FirmwareModuleType_INVALID_FIRMWARE_MODULE = 0, 
    particle_ctrl_FirmwareModuleType_BOOTLOADER = 1, /* Bootloader */
    particle_ctrl_FirmwareModuleType_SYSTEM_PART = 2, /* System part */
    particle_ctrl_FirmwareModuleType_USER_PART = 3, /* User part */
    particle_ctrl_FirmwareModuleType_MONO_FIRMWARE = 4, /* Monolithic firmware */
    particle_ctrl_FirmwareModuleType_NCP_FIRMWARE = 5, /* NCP firmware */
    particle_ctrl_FirmwareModuleType_RADIO_STACK = 6 /* Radio stack binary */
} particle_ctrl_FirmwareModuleType;

typedef enum _particle_ctrl_FirmwareModuleValidityFlag { 
    particle_ctrl_FirmwareModuleValidityFlag_NO_VALIDATION_ERRORS = 0, 
    particle_ctrl_FirmwareModuleValidityFlag_INTEGRITY_CHECK_FAILED = 1, /* Integrity check failed */
    particle_ctrl_FirmwareModuleValidityFlag_DEPENDENCY_CHECK_FAILED = 2 /* Dependency check failed */
} particle_ctrl_FirmwareModuleValidityFlag;

typedef enum _particle_ctrl_SectionFlag { 
    particle_ctrl_SectionFlag_NO_SECTION_FLAGS = 0, 
    particle_ctrl_SectionFlag_CAN_READ = 1, /* Section data is readable */
    particle_ctrl_SectionFlag_CAN_WRITE = 2, /* Section data is writable */
    particle_ctrl_SectionFlag_CAN_CLEAR = 4, /* Section can be cleared */
    particle_ctrl_SectionFlag_CAN_GET_SIZE = 8, /* Actual size of the section data can be determined */
    particle_ctrl_SectionFlag_NEED_CLEAR = 16 /* Section needs to be cleared before writing */
} particle_ctrl_SectionFlag;

typedef enum _particle_ctrl_FileFormat { 
    particle_ctrl_FileFormat_BIN = 0, /* Binary */
    particle_ctrl_FileFormat_MINIZ = 1 /* miniz compressed */
} particle_ctrl_FileFormat;

/* Struct definitions */
typedef struct _particle_ctrl_CancelFirmwareUpdateReply { 
    char dummy_field;
} particle_ctrl_CancelFirmwareUpdateReply;

/* Cancel the firmware update */
typedef struct _particle_ctrl_CancelFirmwareUpdateRequest { 
    char dummy_field;
} particle_ctrl_CancelFirmwareUpdateRequest;

/* *
 Get firmware module info. */
typedef struct _particle_ctrl_ClearSectionDataReply { 
    char dummy_field;
} particle_ctrl_ClearSectionDataReply;

typedef struct _particle_ctrl_DescribeStorageReply { 
    pb_callback_t storage; /* Storages */
} particle_ctrl_DescribeStorageReply;

/* Describe the built-in storage */
typedef struct _particle_ctrl_DescribeStorageRequest { 
    char dummy_field;
} particle_ctrl_DescribeStorageRequest;

typedef struct _particle_ctrl_FinishFirmwareUpdateReply { 
    char dummy_field;
} particle_ctrl_FinishFirmwareUpdateReply;

typedef struct _particle_ctrl_FirmwareUpdateDataReply { 
    char dummy_field;
} particle_ctrl_FirmwareUpdateDataReply;

/* Send the firmware update file */
typedef struct _particle_ctrl_FirmwareUpdateDataRequest { 
    pb_callback_t data; 
} particle_ctrl_FirmwareUpdateDataRequest;

typedef struct _particle_ctrl_GetModuleInfoReply { 
    pb_callback_t modules; 
} particle_ctrl_GetModuleInfoReply;

typedef struct _particle_ctrl_GetModuleInfoRequest { 
    char dummy_field;
} particle_ctrl_GetModuleInfoRequest;

typedef struct _particle_ctrl_ReadSectionDataReply { 
    pb_callback_t data; /* Storage index */
} particle_ctrl_ReadSectionDataReply;

typedef struct _particle_ctrl_WriteSectionDataReply { 
    char dummy_field;
} particle_ctrl_WriteSectionDataReply;

typedef struct _particle_ctrl_ClearSectionDataRequest { 
    uint32_t storage; /* Section data size */
    uint32_t section; 
} particle_ctrl_ClearSectionDataRequest;

typedef struct _particle_ctrl_DescribeStorageReply_Section_FirmwareModule { 
    particle_ctrl_FirmwareModuleType type; /* Section data */
    uint32_t index; 
} particle_ctrl_DescribeStorageReply_Section_FirmwareModule;

typedef struct _particle_ctrl_DescribeStorageReply_Storage { 
    particle_ctrl_StorageType type; /* Storage index */
    uint32_t flags; /* Section index */
    pb_callback_t sections; /* Offset */
} particle_ctrl_DescribeStorageReply_Storage;

/* Finish the firmware update process */
typedef struct _particle_ctrl_FinishFirmwareUpdateRequest { 
    bool validate_only; /* When `true` it will only validate the integity of the update but won't write it to flash */
} particle_ctrl_FinishFirmwareUpdateRequest;

typedef struct _particle_ctrl_GetModuleInfoReply_Dependency { 
    particle_ctrl_FirmwareModuleType type; 
    uint32_t index; 
    uint32_t version; 
} particle_ctrl_GetModuleInfoReply_Dependency;

typedef struct _particle_ctrl_GetModuleInfoReply_Module { 
    particle_ctrl_FirmwareModuleType type; 
    uint32_t index; 
    uint32_t version; 
    uint32_t size; 
    uint32_t validity; 
    pb_callback_t dependencies; 
} particle_ctrl_GetModuleInfoReply_Module;

typedef struct _particle_ctrl_GetSectionDataSizeReply { 
    uint32_t size; 
} particle_ctrl_GetSectionDataSizeReply;

typedef struct _particle_ctrl_GetSectionDataSizeRequest { 
    uint32_t storage; /* Firmware modules */
    uint32_t section; 
} particle_ctrl_GetSectionDataSizeRequest;

typedef struct _particle_ctrl_ReadSectionDataRequest { 
    uint32_t storage; 
    uint32_t section; 
    uint32_t offset; 
    uint32_t size; 
} particle_ctrl_ReadSectionDataRequest;

typedef struct _particle_ctrl_StartFirmwareUpdateReply { 
    uint32_t chunk_size; /* Maximum chunk size */
} particle_ctrl_StartFirmwareUpdateReply;

/* Start the firmware update process */
typedef struct _particle_ctrl_StartFirmwareUpdateRequest { 
    uint32_t size; /* Size of the firmware binary */
    particle_ctrl_FileFormat format; /* Format of the firmware binary */
} particle_ctrl_StartFirmwareUpdateRequest;

typedef struct _particle_ctrl_WriteSectionDataRequest { 
    uint32_t storage; 
    uint32_t section; 
    uint32_t offset; 
    pb_callback_t data; 
} particle_ctrl_WriteSectionDataRequest;

typedef struct _particle_ctrl_DescribeStorageReply_Section { 
    particle_ctrl_SectionType type; /* Storage index */
    uint32_t size; /* Section index */
    uint32_t flags; /* Offset */
    particle_ctrl_DescribeStorageReply_Section_FirmwareModule firmware_module; /* Size */
} particle_ctrl_DescribeStorageReply_Section;


/* Helper constants for enums */
#define _particle_ctrl_StorageType_MIN particle_ctrl_StorageType_INVALID_STORAGE
#define _particle_ctrl_StorageType_MAX particle_ctrl_StorageType_INTERNAL
#define _particle_ctrl_StorageType_ARRAYSIZE ((particle_ctrl_StorageType)(particle_ctrl_StorageType_INTERNAL+1))

#define _particle_ctrl_SectionType_MIN particle_ctrl_SectionType_INVALID_SECTION
#define _particle_ctrl_SectionType_MAX particle_ctrl_SectionType_EEPROM
#define _particle_ctrl_SectionType_ARRAYSIZE ((particle_ctrl_SectionType)(particle_ctrl_SectionType_EEPROM+1))

#define _particle_ctrl_FirmwareModuleType_MIN particle_ctrl_FirmwareModuleType_INVALID_FIRMWARE_MODULE
#define _particle_ctrl_FirmwareModuleType_MAX particle_ctrl_FirmwareModuleType_RADIO_STACK
#define _particle_ctrl_FirmwareModuleType_ARRAYSIZE ((particle_ctrl_FirmwareModuleType)(particle_ctrl_FirmwareModuleType_RADIO_STACK+1))

#define _particle_ctrl_FirmwareModuleValidityFlag_MIN particle_ctrl_FirmwareModuleValidityFlag_NO_VALIDATION_ERRORS
#define _particle_ctrl_FirmwareModuleValidityFlag_MAX particle_ctrl_FirmwareModuleValidityFlag_DEPENDENCY_CHECK_FAILED
#define _particle_ctrl_FirmwareModuleValidityFlag_ARRAYSIZE ((particle_ctrl_FirmwareModuleValidityFlag)(particle_ctrl_FirmwareModuleValidityFlag_DEPENDENCY_CHECK_FAILED+1))

#define _particle_ctrl_SectionFlag_MIN particle_ctrl_SectionFlag_NO_SECTION_FLAGS
#define _particle_ctrl_SectionFlag_MAX particle_ctrl_SectionFlag_NEED_CLEAR
#define _particle_ctrl_SectionFlag_ARRAYSIZE ((particle_ctrl_SectionFlag)(particle_ctrl_SectionFlag_NEED_CLEAR+1))

#define _particle_ctrl_FileFormat_MIN particle_ctrl_FileFormat_BIN
#define _particle_ctrl_FileFormat_MAX particle_ctrl_FileFormat_MINIZ
#define _particle_ctrl_FileFormat_ARRAYSIZE ((particle_ctrl_FileFormat)(particle_ctrl_FileFormat_MINIZ+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define particle_ctrl_StartFirmwareUpdateRequest_init_default {0, _particle_ctrl_FileFormat_MIN}
#define particle_ctrl_StartFirmwareUpdateReply_init_default {0}
#define particle_ctrl_FinishFirmwareUpdateRequest_init_default {0}
#define particle_ctrl_FinishFirmwareUpdateReply_init_default {0}
#define particle_ctrl_CancelFirmwareUpdateRequest_init_default {0}
#define particle_ctrl_CancelFirmwareUpdateReply_init_default {0}
#define particle_ctrl_FirmwareUpdateDataRequest_init_default {{{NULL}, NULL}}
#define particle_ctrl_FirmwareUpdateDataReply_init_default {0}
#define particle_ctrl_DescribeStorageRequest_init_default {0}
#define particle_ctrl_DescribeStorageReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_DescribeStorageReply_Section_init_default {_particle_ctrl_SectionType_MIN, 0, 0, particle_ctrl_DescribeStorageReply_Section_FirmwareModule_init_default}
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_init_default {_particle_ctrl_FirmwareModuleType_MIN, 0}
#define particle_ctrl_DescribeStorageReply_Storage_init_default {_particle_ctrl_StorageType_MIN, 0, {{NULL}, NULL}}
#define particle_ctrl_ReadSectionDataRequest_init_default {0, 0, 0, 0}
#define particle_ctrl_ReadSectionDataReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_WriteSectionDataRequest_init_default {0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_WriteSectionDataReply_init_default {0}
#define particle_ctrl_ClearSectionDataRequest_init_default {0, 0}
#define particle_ctrl_ClearSectionDataReply_init_default {0}
#define particle_ctrl_GetSectionDataSizeRequest_init_default {0, 0}
#define particle_ctrl_GetSectionDataSizeReply_init_default {0}
#define particle_ctrl_GetModuleInfoRequest_init_default {0}
#define particle_ctrl_GetModuleInfoReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_GetModuleInfoReply_Dependency_init_default {_particle_ctrl_FirmwareModuleType_MIN, 0, 0}
#define particle_ctrl_GetModuleInfoReply_Module_init_default {_particle_ctrl_FirmwareModuleType_MIN, 0, 0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_StartFirmwareUpdateRequest_init_zero {0, _particle_ctrl_FileFormat_MIN}
#define particle_ctrl_StartFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_FinishFirmwareUpdateRequest_init_zero {0}
#define particle_ctrl_FinishFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_CancelFirmwareUpdateRequest_init_zero {0}
#define particle_ctrl_CancelFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_FirmwareUpdateDataRequest_init_zero {{{NULL}, NULL}}
#define particle_ctrl_FirmwareUpdateDataReply_init_zero {0}
#define particle_ctrl_DescribeStorageRequest_init_zero {0}
#define particle_ctrl_DescribeStorageReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_DescribeStorageReply_Section_init_zero {_particle_ctrl_SectionType_MIN, 0, 0, particle_ctrl_DescribeStorageReply_Section_FirmwareModule_init_zero}
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_init_zero {_particle_ctrl_FirmwareModuleType_MIN, 0}
#define particle_ctrl_DescribeStorageReply_Storage_init_zero {_particle_ctrl_StorageType_MIN, 0, {{NULL}, NULL}}
#define particle_ctrl_ReadSectionDataRequest_init_zero {0, 0, 0, 0}
#define particle_ctrl_ReadSectionDataReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_WriteSectionDataRequest_init_zero {0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_WriteSectionDataReply_init_zero {0}
#define particle_ctrl_ClearSectionDataRequest_init_zero {0, 0}
#define particle_ctrl_ClearSectionDataReply_init_zero {0}
#define particle_ctrl_GetSectionDataSizeRequest_init_zero {0, 0}
#define particle_ctrl_GetSectionDataSizeReply_init_zero {0}
#define particle_ctrl_GetModuleInfoRequest_init_zero {0}
#define particle_ctrl_GetModuleInfoReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_GetModuleInfoReply_Dependency_init_zero {_particle_ctrl_FirmwareModuleType_MIN, 0, 0}
#define particle_ctrl_GetModuleInfoReply_Module_init_zero {_particle_ctrl_FirmwareModuleType_MIN, 0, 0, 0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define particle_ctrl_DescribeStorageReply_storage_tag 1
#define particle_ctrl_FirmwareUpdateDataRequest_data_tag 1
#define particle_ctrl_GetModuleInfoReply_modules_tag 1
#define particle_ctrl_ReadSectionDataReply_data_tag 1
#define particle_ctrl_ClearSectionDataRequest_storage_tag 1
#define particle_ctrl_ClearSectionDataRequest_section_tag 2
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_type_tag 1
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_index_tag 2
#define particle_ctrl_DescribeStorageReply_Storage_type_tag 1
#define particle_ctrl_DescribeStorageReply_Storage_flags_tag 2
#define particle_ctrl_DescribeStorageReply_Storage_sections_tag 3
#define particle_ctrl_FinishFirmwareUpdateRequest_validate_only_tag 1
#define particle_ctrl_GetModuleInfoReply_Dependency_type_tag 1
#define particle_ctrl_GetModuleInfoReply_Dependency_index_tag 2
#define particle_ctrl_GetModuleInfoReply_Dependency_version_tag 3
#define particle_ctrl_GetModuleInfoReply_Module_type_tag 1
#define particle_ctrl_GetModuleInfoReply_Module_index_tag 2
#define particle_ctrl_GetModuleInfoReply_Module_version_tag 3
#define particle_ctrl_GetModuleInfoReply_Module_size_tag 4
#define particle_ctrl_GetModuleInfoReply_Module_validity_tag 5
#define particle_ctrl_GetModuleInfoReply_Module_dependencies_tag 6
#define particle_ctrl_GetSectionDataSizeReply_size_tag 1
#define particle_ctrl_GetSectionDataSizeRequest_storage_tag 1
#define particle_ctrl_GetSectionDataSizeRequest_section_tag 2
#define particle_ctrl_ReadSectionDataRequest_storage_tag 1
#define particle_ctrl_ReadSectionDataRequest_section_tag 2
#define particle_ctrl_ReadSectionDataRequest_offset_tag 3
#define particle_ctrl_ReadSectionDataRequest_size_tag 4
#define particle_ctrl_StartFirmwareUpdateReply_chunk_size_tag 1
#define particle_ctrl_StartFirmwareUpdateRequest_size_tag 1
#define particle_ctrl_StartFirmwareUpdateRequest_format_tag 2
#define particle_ctrl_WriteSectionDataRequest_storage_tag 1
#define particle_ctrl_WriteSectionDataRequest_section_tag 2
#define particle_ctrl_WriteSectionDataRequest_offset_tag 3
#define particle_ctrl_WriteSectionDataRequest_data_tag 4
#define particle_ctrl_DescribeStorageReply_Section_type_tag 1
#define particle_ctrl_DescribeStorageReply_Section_size_tag 2
#define particle_ctrl_DescribeStorageReply_Section_flags_tag 3
#define particle_ctrl_DescribeStorageReply_Section_firmware_module_tag 4

/* Struct field encoding specification for nanopb */
#define particle_ctrl_StartFirmwareUpdateRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   size,              1) \
X(a, STATIC,   SINGULAR, UENUM,    format,            2)
#define particle_ctrl_StartFirmwareUpdateRequest_CALLBACK NULL
#define particle_ctrl_StartFirmwareUpdateRequest_DEFAULT NULL

#define particle_ctrl_StartFirmwareUpdateReply_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   chunk_size,        1)
#define particle_ctrl_StartFirmwareUpdateReply_CALLBACK NULL
#define particle_ctrl_StartFirmwareUpdateReply_DEFAULT NULL

#define particle_ctrl_FinishFirmwareUpdateRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     validate_only,     1)
#define particle_ctrl_FinishFirmwareUpdateRequest_CALLBACK NULL
#define particle_ctrl_FinishFirmwareUpdateRequest_DEFAULT NULL

#define particle_ctrl_FinishFirmwareUpdateReply_FIELDLIST(X, a) \

#define particle_ctrl_FinishFirmwareUpdateReply_CALLBACK NULL
#define particle_ctrl_FinishFirmwareUpdateReply_DEFAULT NULL

#define particle_ctrl_CancelFirmwareUpdateRequest_FIELDLIST(X, a) \

#define particle_ctrl_CancelFirmwareUpdateRequest_CALLBACK NULL
#define particle_ctrl_CancelFirmwareUpdateRequest_DEFAULT NULL

#define particle_ctrl_CancelFirmwareUpdateReply_FIELDLIST(X, a) \

#define particle_ctrl_CancelFirmwareUpdateReply_CALLBACK NULL
#define particle_ctrl_CancelFirmwareUpdateReply_DEFAULT NULL

#define particle_ctrl_FirmwareUpdateDataRequest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              1)
#define particle_ctrl_FirmwareUpdateDataRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_FirmwareUpdateDataRequest_DEFAULT NULL

#define particle_ctrl_FirmwareUpdateDataReply_FIELDLIST(X, a) \

#define particle_ctrl_FirmwareUpdateDataReply_CALLBACK NULL
#define particle_ctrl_FirmwareUpdateDataReply_DEFAULT NULL

#define particle_ctrl_DescribeStorageRequest_FIELDLIST(X, a) \

#define particle_ctrl_DescribeStorageRequest_CALLBACK NULL
#define particle_ctrl_DescribeStorageRequest_DEFAULT NULL

#define particle_ctrl_DescribeStorageReply_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  storage,           1)
#define particle_ctrl_DescribeStorageReply_CALLBACK pb_default_field_callback
#define particle_ctrl_DescribeStorageReply_DEFAULT NULL
#define particle_ctrl_DescribeStorageReply_storage_MSGTYPE particle_ctrl_DescribeStorageReply_Storage

#define particle_ctrl_DescribeStorageReply_Section_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT32,   size,              2) \
X(a, STATIC,   SINGULAR, UINT32,   flags,             3) \
X(a, STATIC,   SINGULAR, MESSAGE,  firmware_module,   4)
#define particle_ctrl_DescribeStorageReply_Section_CALLBACK NULL
#define particle_ctrl_DescribeStorageReply_Section_DEFAULT NULL
#define particle_ctrl_DescribeStorageReply_Section_firmware_module_MSGTYPE particle_ctrl_DescribeStorageReply_Section_FirmwareModule

#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT32,   index,             2)
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_CALLBACK NULL
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_DEFAULT NULL

#define particle_ctrl_DescribeStorageReply_Storage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT32,   flags,             2) \
X(a, CALLBACK, REPEATED, MESSAGE,  sections,          3)
#define particle_ctrl_DescribeStorageReply_Storage_CALLBACK pb_default_field_callback
#define particle_ctrl_DescribeStorageReply_Storage_DEFAULT NULL
#define particle_ctrl_DescribeStorageReply_Storage_sections_MSGTYPE particle_ctrl_DescribeStorageReply_Section

#define particle_ctrl_ReadSectionDataRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   storage,           1) \
X(a, STATIC,   SINGULAR, UINT32,   section,           2) \
X(a, STATIC,   SINGULAR, UINT32,   offset,            3) \
X(a, STATIC,   SINGULAR, UINT32,   size,              4)
#define particle_ctrl_ReadSectionDataRequest_CALLBACK NULL
#define particle_ctrl_ReadSectionDataRequest_DEFAULT NULL

#define particle_ctrl_ReadSectionDataReply_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              1)
#define particle_ctrl_ReadSectionDataReply_CALLBACK pb_default_field_callback
#define particle_ctrl_ReadSectionDataReply_DEFAULT NULL

#define particle_ctrl_WriteSectionDataRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   storage,           1) \
X(a, STATIC,   SINGULAR, UINT32,   section,           2) \
X(a, STATIC,   SINGULAR, UINT32,   offset,            3) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              4)
#define particle_ctrl_WriteSectionDataRequest_CALLBACK pb_default_field_callback
#define particle_ctrl_WriteSectionDataRequest_DEFAULT NULL

#define particle_ctrl_WriteSectionDataReply_FIELDLIST(X, a) \

#define particle_ctrl_WriteSectionDataReply_CALLBACK NULL
#define particle_ctrl_WriteSectionDataReply_DEFAULT NULL

#define particle_ctrl_ClearSectionDataRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   storage,           1) \
X(a, STATIC,   SINGULAR, UINT32,   section,           2)
#define particle_ctrl_ClearSectionDataRequest_CALLBACK NULL
#define particle_ctrl_ClearSectionDataRequest_DEFAULT NULL

#define particle_ctrl_ClearSectionDataReply_FIELDLIST(X, a) \

#define particle_ctrl_ClearSectionDataReply_CALLBACK NULL
#define particle_ctrl_ClearSectionDataReply_DEFAULT NULL

#define particle_ctrl_GetSectionDataSizeRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   storage,           1) \
X(a, STATIC,   SINGULAR, UINT32,   section,           2)
#define particle_ctrl_GetSectionDataSizeRequest_CALLBACK NULL
#define particle_ctrl_GetSectionDataSizeRequest_DEFAULT NULL

#define particle_ctrl_GetSectionDataSizeReply_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   size,              1)
#define particle_ctrl_GetSectionDataSizeReply_CALLBACK NULL
#define particle_ctrl_GetSectionDataSizeReply_DEFAULT NULL

#define particle_ctrl_GetModuleInfoRequest_FIELDLIST(X, a) \

#define particle_ctrl_GetModuleInfoRequest_CALLBACK NULL
#define particle_ctrl_GetModuleInfoRequest_DEFAULT NULL

#define particle_ctrl_GetModuleInfoReply_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  modules,           1)
#define particle_ctrl_GetModuleInfoReply_CALLBACK pb_default_field_callback
#define particle_ctrl_GetModuleInfoReply_DEFAULT NULL
#define particle_ctrl_GetModuleInfoReply_modules_MSGTYPE particle_ctrl_GetModuleInfoReply_Module

#define particle_ctrl_GetModuleInfoReply_Dependency_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT32,   index,             2) \
X(a, STATIC,   SINGULAR, UINT32,   version,           3)
#define particle_ctrl_GetModuleInfoReply_Dependency_CALLBACK NULL
#define particle_ctrl_GetModuleInfoReply_Dependency_DEFAULT NULL

#define particle_ctrl_GetModuleInfoReply_Module_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT32,   index,             2) \
X(a, STATIC,   SINGULAR, UINT32,   version,           3) \
X(a, STATIC,   SINGULAR, UINT32,   size,              4) \
X(a, STATIC,   SINGULAR, UINT32,   validity,          5) \
X(a, CALLBACK, REPEATED, MESSAGE,  dependencies,      6)
#define particle_ctrl_GetModuleInfoReply_Module_CALLBACK pb_default_field_callback
#define particle_ctrl_GetModuleInfoReply_Module_DEFAULT NULL
#define particle_ctrl_GetModuleInfoReply_Module_dependencies_MSGTYPE particle_ctrl_GetModuleInfoReply_Dependency

extern const pb_msgdesc_t particle_ctrl_StartFirmwareUpdateRequest_msg;
extern const pb_msgdesc_t particle_ctrl_StartFirmwareUpdateReply_msg;
extern const pb_msgdesc_t particle_ctrl_FinishFirmwareUpdateRequest_msg;
extern const pb_msgdesc_t particle_ctrl_FinishFirmwareUpdateReply_msg;
extern const pb_msgdesc_t particle_ctrl_CancelFirmwareUpdateRequest_msg;
extern const pb_msgdesc_t particle_ctrl_CancelFirmwareUpdateReply_msg;
extern const pb_msgdesc_t particle_ctrl_FirmwareUpdateDataRequest_msg;
extern const pb_msgdesc_t particle_ctrl_FirmwareUpdateDataReply_msg;
extern const pb_msgdesc_t particle_ctrl_DescribeStorageRequest_msg;
extern const pb_msgdesc_t particle_ctrl_DescribeStorageReply_msg;
extern const pb_msgdesc_t particle_ctrl_DescribeStorageReply_Section_msg;
extern const pb_msgdesc_t particle_ctrl_DescribeStorageReply_Section_FirmwareModule_msg;
extern const pb_msgdesc_t particle_ctrl_DescribeStorageReply_Storage_msg;
extern const pb_msgdesc_t particle_ctrl_ReadSectionDataRequest_msg;
extern const pb_msgdesc_t particle_ctrl_ReadSectionDataReply_msg;
extern const pb_msgdesc_t particle_ctrl_WriteSectionDataRequest_msg;
extern const pb_msgdesc_t particle_ctrl_WriteSectionDataReply_msg;
extern const pb_msgdesc_t particle_ctrl_ClearSectionDataRequest_msg;
extern const pb_msgdesc_t particle_ctrl_ClearSectionDataReply_msg;
extern const pb_msgdesc_t particle_ctrl_GetSectionDataSizeRequest_msg;
extern const pb_msgdesc_t particle_ctrl_GetSectionDataSizeReply_msg;
extern const pb_msgdesc_t particle_ctrl_GetModuleInfoRequest_msg;
extern const pb_msgdesc_t particle_ctrl_GetModuleInfoReply_msg;
extern const pb_msgdesc_t particle_ctrl_GetModuleInfoReply_Dependency_msg;
extern const pb_msgdesc_t particle_ctrl_GetModuleInfoReply_Module_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define particle_ctrl_StartFirmwareUpdateRequest_fields &particle_ctrl_StartFirmwareUpdateRequest_msg
#define particle_ctrl_StartFirmwareUpdateReply_fields &particle_ctrl_StartFirmwareUpdateReply_msg
#define particle_ctrl_FinishFirmwareUpdateRequest_fields &particle_ctrl_FinishFirmwareUpdateRequest_msg
#define particle_ctrl_FinishFirmwareUpdateReply_fields &particle_ctrl_FinishFirmwareUpdateReply_msg
#define particle_ctrl_CancelFirmwareUpdateRequest_fields &particle_ctrl_CancelFirmwareUpdateRequest_msg
#define particle_ctrl_CancelFirmwareUpdateReply_fields &particle_ctrl_CancelFirmwareUpdateReply_msg
#define particle_ctrl_FirmwareUpdateDataRequest_fields &particle_ctrl_FirmwareUpdateDataRequest_msg
#define particle_ctrl_FirmwareUpdateDataReply_fields &particle_ctrl_FirmwareUpdateDataReply_msg
#define particle_ctrl_DescribeStorageRequest_fields &particle_ctrl_DescribeStorageRequest_msg
#define particle_ctrl_DescribeStorageReply_fields &particle_ctrl_DescribeStorageReply_msg
#define particle_ctrl_DescribeStorageReply_Section_fields &particle_ctrl_DescribeStorageReply_Section_msg
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_fields &particle_ctrl_DescribeStorageReply_Section_FirmwareModule_msg
#define particle_ctrl_DescribeStorageReply_Storage_fields &particle_ctrl_DescribeStorageReply_Storage_msg
#define particle_ctrl_ReadSectionDataRequest_fields &particle_ctrl_ReadSectionDataRequest_msg
#define particle_ctrl_ReadSectionDataReply_fields &particle_ctrl_ReadSectionDataReply_msg
#define particle_ctrl_WriteSectionDataRequest_fields &particle_ctrl_WriteSectionDataRequest_msg
#define particle_ctrl_WriteSectionDataReply_fields &particle_ctrl_WriteSectionDataReply_msg
#define particle_ctrl_ClearSectionDataRequest_fields &particle_ctrl_ClearSectionDataRequest_msg
#define particle_ctrl_ClearSectionDataReply_fields &particle_ctrl_ClearSectionDataReply_msg
#define particle_ctrl_GetSectionDataSizeRequest_fields &particle_ctrl_GetSectionDataSizeRequest_msg
#define particle_ctrl_GetSectionDataSizeReply_fields &particle_ctrl_GetSectionDataSizeReply_msg
#define particle_ctrl_GetModuleInfoRequest_fields &particle_ctrl_GetModuleInfoRequest_msg
#define particle_ctrl_GetModuleInfoReply_fields &particle_ctrl_GetModuleInfoReply_msg
#define particle_ctrl_GetModuleInfoReply_Dependency_fields &particle_ctrl_GetModuleInfoReply_Dependency_msg
#define particle_ctrl_GetModuleInfoReply_Module_fields &particle_ctrl_GetModuleInfoReply_Module_msg

/* Maximum encoded size of messages (where known) */
/* particle_ctrl_FirmwareUpdateDataRequest_size depends on runtime parameters */
/* particle_ctrl_DescribeStorageReply_size depends on runtime parameters */
/* particle_ctrl_DescribeStorageReply_Storage_size depends on runtime parameters */
/* particle_ctrl_ReadSectionDataReply_size depends on runtime parameters */
/* particle_ctrl_WriteSectionDataRequest_size depends on runtime parameters */
/* particle_ctrl_GetModuleInfoReply_size depends on runtime parameters */
/* particle_ctrl_GetModuleInfoReply_Module_size depends on runtime parameters */
#define particle_ctrl_CancelFirmwareUpdateReply_size 0
#define particle_ctrl_CancelFirmwareUpdateRequest_size 0
#define particle_ctrl_ClearSectionDataReply_size 0
#define particle_ctrl_ClearSectionDataRequest_size 12
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_size 8
#define particle_ctrl_DescribeStorageReply_Section_size 24
#define particle_ctrl_DescribeStorageRequest_size 0
#define particle_ctrl_FinishFirmwareUpdateReply_size 0
#define particle_ctrl_FinishFirmwareUpdateRequest_size 2
#define particle_ctrl_FirmwareUpdateDataReply_size 0
#define particle_ctrl_GetModuleInfoReply_Dependency_size 14
#define particle_ctrl_GetModuleInfoRequest_size  0
#define particle_ctrl_GetSectionDataSizeReply_size 6
#define particle_ctrl_GetSectionDataSizeRequest_size 12
#define particle_ctrl_ReadSectionDataRequest_size 24
#define particle_ctrl_StartFirmwareUpdateReply_size 6
#define particle_ctrl_StartFirmwareUpdateRequest_size 8
#define particle_ctrl_WriteSectionDataReply_size 0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
